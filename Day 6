//矩阵置零
void setZeroes(vector<vector<int>> &matrix)
{
    bool flagcol = false, flagrow = false;//设定两个标志位，记录第一行第一列是否有0
    int rows = matrix.size(), cols = matrix[0].size();
    for (int i = 0; i < rows; i++)//遍历第一列
    {
        if (matrix[i][0] == 0)
            flagcol = true;
    }
    for (int i = 0; i < cols; i++)//遍历第一行
    {
        if (matrix[0][i] == 0)
            flagrow = true;
    }
    for (int i = 1; i < rows; i++)//遍历整个矩阵
    {
        for (int j = 1; j < cols; j++)
        {
            if (matrix[i][j] == 0)
            {
                matrix[0][j] = 0;//用第一行记录j列是否有0
                matrix[i][0] = 0;//用第一列记录i行是否有0
            }
        }
    }
    for (int i = 1; i < cols; i++)//一定注意i从1开始，否则第一列记录也可能被置零，导致整个矩阵被置零
    {
        if (matrix[0][i] == 0)
            for (int j = 1; j < rows; j++)
                matrix[j][i] = 0;
    }
    for (int i = 1; i < rows; i++)
    {
        if (matrix[i][0] == 0)
            for (int j = 1; j < cols; j++)
                matrix[i][j] = 0;
    }
    if (flagcol == true)//第一列有0，将第一列置零

        for (int i = 0; i < rows; i++)
            matrix[i][0] = 0;
    if (flagrow == true)
        for (int i = 0; i < cols; i++)
            matrix[0][i] = 0;
}

//找到字符串中首个不重复的元素
int firstUniqChar(string s)
{
    vector<char> words;
    vector<int> counts;
    for (auto c : s)//这一步遍历字符串，用两个数组分别存储元素及其出现次数
    {
        int i;
        int n = words.size();
        for (i = 0; i < n; i++)
        {
            if (c == words[i])
            {
                counts[i]++;
                break;
            }
        }
        if (i == n)
        {
            words.push_back(c);
            counts.push_back(1);
        }
    }
    int i, n = counts.size(), m = s.size();
    for (i = 0; i < n; i++)//遍历counts数组，找到出现次数为1的元素，找不到则返回-1
    {
        if (counts[i] == 1)
        {
            for (int j = 0; j < m; j++)
                if (s[j] == words[i])
                    return j;
        }
    }
    return -1;
}

//ransomeNote可否由magazine构成？（magazine中每个char只可用一次，即绑匪剪杂志来写赎金信）
bool canConstruct(string ransomNote, string magazine)
{
    vector<char> words;
    vector<int> counts;
    for (auto c : magazine)//用数组保存magazine中出现的字符与出现次数
    {
        int i;
        int n = words.size();
        for (i = 0; i < n; i++)
        {
            if (c == words[i])
            {
                counts[i]++;
                break;
            }
        }
        if (i == n)
        {
            words.push_back(c);
            counts.push_back(1);
        }
    }
    int n = ransomNote.size(), m = words.size();
    for (int i = 0; i < n; i++)
    {
        int j;
        for (j = 0; j < m; j++)
        {
            if (ransomNote[i] == words[j] && counts[j] > 0)
            {
                counts[j]--;
                break;
            }
        }
        if (j == m)
            return false;
    }
    return true;
}
