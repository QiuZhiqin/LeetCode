//合并有序数组
void merge(vector<int> &nums1, int m, vector<int> &nums2, int n)
{
    int p1 = 0, p2 = 0;
    int sorted[m + n];
    int cur;
    while (p1 < m || p2 < n)
    {
        if (p1 == m)
            cur = nums2[p2++];
        else if (p2 == n)
            cur = nums1[p1++];
        else if (nums1[p1] <= nums2[p2])
            cur = nums1[p1++];
        else
            cur = nums2[p2++];
        sorted[p1 + p2 - 1] = cur;
    }
    for (int i = 0; i < m + n; i++)
        nums1[i] = sorted[i];
}

//最长公共前缀
string longestCommonPrefix(vector<string> &strs)
{
    int n2 = strs.size(), n1 = strs[0].size();
    string ans;
    char b;
    int a, i = 0;
    if (n2 == 0)
        return ans;
    while (i < n1)
    {
        a = 1;
        b = strs[0][i];
        for (int j = 1; j < n2; j++)
        {
            if (strs[j][i] == b)
                a++;
            else
                break;
        }
        if (a == n2)
            i++;
        else
            break;
    }
    ans.assign(strs[0], 0, i);
    return ans;
}
