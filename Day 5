//两个数组的交集
vector<int> intersect(vector<int> &nums1, vector<int> &nums2)
{
    sort(nums1.begin(), nums1.end());
    sort(nums2.begin(), nums2.end());
    vector<int> ans;
    int i = 0, j = 0, s1 = nums1.size(), s2 = nums2.size();
    while (i < s1 && j < s2)
    {
        if (nums1[i] == nums2[j])
        {
            ans.push_back(nums1[i]);
            i++;
            j++;
        }
        else if (nums1[i] < nums2[j])
            i++;
        else
            j++;
    }
    return ans;
}

//斐波那契非递归
int fib(int n)
{
    int i = 2, Last = 1, NextToLast = 0, Answer;
    if (n <= 1)
        return n;
    while (i <= n)
    {
        Answer = Last + NextToLast;
        NextToLast = Last;
        Last = Answer;
        i++;
    }
    return Answer;
}
